### **`tox.ini`**
```ini
# tox.ini - Configuración para testing en múltiples entornos
[tox]
envlist = py38,py39,py310,py311,py312,flake8,mypy,docs
isolated_build = True
skip_missing_interpreters = True

[testenv]
description = Run unit tests
deps =
    pytest>=7.0
    pytest-cov>=4.0
    pytest-asyncio>=0.21
    pytest-timeout>=2.1
commands =
    pytest {posargs:tests} -v --cov=gcp_secrets_manager --cov-report=term-missing

[testenv:py38]
basepython = python3.8

[testenv:py39]
basepython = python3.9

[testenv:py310]
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:py312]
basepython = python3.12

[testenv:flake8]
description = Run flake8 linting
basepython = python3.12
deps =
    flake8>=6.0
    flake8-docstrings>=1.7
    flake8-import-order>=0.18
commands =
    flake8 gcp_secrets_manager tests

[testenv:mypy]
description = Run type checking with mypy
basepython = python3.12
deps =
    mypy>=1.0
    types-setuptools
commands =
    mypy gcp_secrets_manager

[testenv:black]
description = Run black code formatter (check only)
basepython = python3.12
deps =
    black>=23.0
commands =
    black --check --diff gcp_secrets_manager tests

[testenv:isort]
description = Run isort import sorter (check only)
basepython = python3.12
deps =
    isort>=5.12
commands =
    isort --check-only --diff gcp_secrets_manager tests

[testenv:format]
description = Run code formatters
basepython = python3.12
deps =
    black>=23.0
    isort>=5.12
commands =
    black gcp_secrets_manager tests
    isort gcp_secrets_manager tests

[testenv:docs]
description = Build documentation
basepython = python3.12
changedir = docs
deps =
    sphinx>=6.0
    sphinx-rtd-theme>=1.2
    myst-parser>=1.0
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html

[testenv:security]
description = Run security checks
basepython = python3.12
deps =
    bandit[toml]>=1.7
    safety>=2.3
commands =
    bandit -r gcp_secrets_manager -ll
    safety check

[testenv:integration]
description = Run integration tests (requires GCP credentials)
basepython = python3.12
passenv = 
    GOOGLE_APPLICATION_CREDENTIALS
    GCP_PROJECT_ID
    GOOGLE_CLOUD_PROJECT
deps =
    pytest>=7.0
    pytest-cov>=4.0
commands =
    pytest tests -v -m integration

[testenv:coverage]
description = Generate coverage report
basepython = python3.12
deps =
    pytest>=7.0
    pytest-cov>=4.0
    coverage[toml]>=7.0
commands =
    coverage run -m pytest tests
    coverage report
    coverage html
    coverage xml

[testenv:build]
description = Build distribution packages
basepython = python3.12
skip_install = True
deps =
    build>=0.10
    twine>=4.0
commands =
    python -m build
    twine check dist/*

# Configuración de flake8
[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude = 
    .git,
    __pycache__,
    .tox,
    build,
    dist,
    *.egg-info,
    .venv
per-file-ignores =
    __init__.py:F401
import-order-style = google
docstring-convention = google

# Configuración de pytest
[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
markers =
    integration: marks tests as integration tests (deselect with '-m "not integration"')
    slow: marks tests as slow (deselect with '-m "not slow"')
addopts = 
    --strict-markers
    --tb=short
    --cov-branch

# Configuración de coverage
[coverage:run]
source = gcp_secrets_manager
omit = 
    */tests/*
    */examples/*
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov